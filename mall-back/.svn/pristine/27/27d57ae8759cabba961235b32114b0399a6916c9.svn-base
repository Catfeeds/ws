package com.cplatform.mall.back.store.web;

import java.sql.SQLException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import com.cplatform.dbhelp.page.Page;
import com.cplatform.mall.back.store.entity.ShopSettings;
import com.cplatform.mall.back.store.service.ShopSettingsService;
import com.cplatform.mall.back.utils.AppConfig;
import com.cplatform.mall.back.utils.JsonRespWrapper;
import com.cplatform.mall.back.utils.LogUtils;
import com.cplatform.mall.back.utils.PageStaticInterface;

/**
 * <br>
 * 类详细说明.
 * <p>
 * Copyright: Copyright (c) 2013-5-28 上午11:20:06
 * <p>
 * Company: 北京宽连十方数字技术有限公司
 * <p>
 * 
 * @author luyidi@c-platform.com
 * @version 1.0.0
 */
@Controller
@RequestMapping(value = "/store/audit")
public class ShopSettingsController {

	@Autowired
	private ShopSettingsService settingsService;


	@Autowired
	private PageStaticInterface pageStaticInterface;

	@Autowired
	private LogUtils logUtils;
	
	@Autowired
	private AppConfig appConfig;
	@Autowired
	private PageStaticInterface staticInterface;
	
	@RequestMapping(value = "/list")
	public String list(
			ShopSettings shopSettings,
			@RequestParam(value = "page", required = false, defaultValue = "1") int page,
			Model model) throws SQLException {
		Page<ShopSettings> pageData = settingsService.findShopSettings(
				shopSettings, page, Page.DEFAULT_PAGESIZE);
		model.addAttribute("pageData", pageData);
		model.addAttribute("pubTagMap", ShopSettings.pubTagMap);
		model.addAttribute("shopClassMap", ShopSettings.shopClassMap);
		model.addAttribute("viewUrl",appConfig.getSettingsBrowse());
		return "/store/store/setting_list";
	}

	@RequestMapping(value = "settingsAdd")
	@ResponseBody
	public Object settingsAdd(@RequestParam Long id, Long shopId, Model model) {


		try {

			ShopSettings shopSettings = settingsService.findByShopSettingId(id);
			this.pageStaticInterface.makeStoreShop(shopId);
			
			shopSettings.setPubTag(Long.valueOf(1));
			settingsService.updatePubTag(shopSettings);
			staticInterface.refreshFrontPage(shopId);

		} catch (Exception e) {
			logUtils.logOther("信息异常：", e.toString());
		}
	//	String jumpUrl = "http://211.138.195.186:1480/shop/gen.chtml?shopId=202&action=preview";
		//model.addAttribute("jumpUrl", jumpUrl);
		return JsonRespWrapper.successReload("审核成功！");

	}

	/**
	 * 查看
	 * 
	 * @param id
	 * @param optype
	 * @param model
	 * @return
	 * @throws IOException
	 * @throws Exception
	 */
	@RequestMapping(value = "/settingsView/{id}")
	public String settingsView(@PathVariable(value = "id") Long id,Long shopId, Model model) {
		ShopSettings shopSettings = this.settingsService
				.findByShopSettingId(id);
		model.addAttribute("shopSettings", shopSettings);
		return "/store/store/shopSettings-view";
	}
}
