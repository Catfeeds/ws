package com.cplatform.mall.back.smsbuy.service;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.ui.Model;

import com.cplatform.dbhelp.DbHelper;
import com.cplatform.dbhelp.page.Page;
import com.cplatform.mall.back.cont.mms.util.TimeUtil;
import com.cplatform.mall.back.smsbuy.dao.SmsBuyActOnlineDao;
import com.cplatform.mall.back.smsbuy.dao.SmsbuyItemRouterDao;
import com.cplatform.mall.back.smsbuy.entity.SmsBuyActOnline;
import com.cplatform.mall.back.smsbuy.entity.SmsbuyItemRouter;
import com.cplatform.mall.back.sys.dao.SysRegionDao;
import com.cplatform.mall.back.sys.dao.SysSpcodeDao;
import com.cplatform.mall.back.sys.entity.SysRegion;
import com.cplatform.mall.back.sys.entity.SysSpcode;
import com.cplatform.mall.back.utils.data.RoleDataUtils;

/**
 * 短信购活动服务类. <br>
 * Description.
 * <p>
 * Copyright: Copyright (c) 2013-6-17 上午10:16:26
 * <p>
 * Company: 北京宽连十方数字技术有限公司
 * <p>
 * Author: wuyn@c-platform.com
 * <p>
 * Version: 1.0
 * <p>
 */
@Service
public class SmsBuyActOnlineService {

	@Autowired
	private DbHelper dbHelper;

	@Autowired
	private SysRegionDao sysRegionDao;

	@Autowired
	private SmsbuyItemRouterDao smsbuyItemRouterDao;

	@Autowired
	private SmsBuyActOnlineDao smsBuyActOnlineDao;

	@Autowired
	private SysSpcodeDao sysSpcodeDao;

	/**
	 * 活动配置列表
	 * 
	 * @param smsBuyActOnline
	 * @param page
	 * @param defaultPagesize
	 * @param model
	 * @throws SQLException
	 */
	public Page<SmsBuyActOnline> listSmsBuyAct(SmsBuyActOnline smsBuyActOnline, Integer page, int pagesize) throws SQLException {
		StringBuilder sql = new StringBuilder(100);
		sql.append("SELECT *  FROM T_SMSBUY_ACT_ONLINE WHERE 1=1");
		List<Object> paramsList = new ArrayList<Object>();
		if (smsBuyActOnline != null) {
			if (smsBuyActOnline.getActName() != null) {
				sql.append(" AND UPPER(ACT_NAME) LIKE '%'||UPPER('" + smsBuyActOnline.getActName() + "')||'%'");
			}
			if (StringUtils.isNotEmpty(smsBuyActOnline.getStatus())) {
				sql.append(" AND STATUS=?");
				paramsList.add(smsBuyActOnline.getStatus());
			}

			if (StringUtils.isNotEmpty(smsBuyActOnline.getStartTime())) {
				sql.append(" AND START_TIME >?");
				paramsList.add(smsBuyActOnline.getStartTime());
			}

			if (StringUtils.isNotEmpty(smsBuyActOnline.getEndTime())) {
				sql.append(" AND END_TIME <?");
				paramsList.add(smsBuyActOnline.getEndTime());
			}
		}
		sql.append(RoleDataUtils.getRoleData(RoleDataUtils.MODUE_SMSBUY));
		sql.append(" ORDER BY ACT_ID DESC");
		return dbHelper.getPage(sql.toString(), SmsBuyActOnline.class, page, pagesize, paramsList.toArray());
	}

	/**
	 * 商品指令列表
	 * 
	 * @param smsbuyItemRouter
	 * @param page
	 * @param defaultPagesize
	 * @return
	 * @throws SQLException
	 */
	public Page<SmsbuyItemRouter> routerList(SmsbuyItemRouter smsbuyItemRouter, Integer page, int pagesize) throws SQLException {
		StringBuilder sql = new StringBuilder(100);
		sql.append("SELECT ROUTER.*,ACT.ACT_NAME  FROM T_SMSBUY_ITEM_ROUTER ROUTER,T_SMSBUY_ACT_ONLINE ACT WHERE 1=1 AND ROUTER.ACT_ID=ACT.ACT_ID");
		List<Object> paramsList = new ArrayList<Object>();
		if (smsbuyItemRouter != null) {
			if (StringUtils.isNotEmpty(smsbuyItemRouter.getItemName())) {
				sql.append(" AND UPPER(ITEM_NAME) LIKE '%'||UPPER('" + smsbuyItemRouter.getItemName() + "')||'%'");
			}
			if (StringUtils.isNotEmpty(smsbuyItemRouter.getCommand())) {
				sql.append(" AND UPPER(COMMAND) LIKE '%'||UPPER('" + smsbuyItemRouter.getCommand() + "')||'%'");
			}

			if (StringUtils.isNotEmpty(smsbuyItemRouter.getActName())) {
				sql.append(" AND UPPER(ACT.ACT_NAME) LIKE '%'||UPPER('" + smsbuyItemRouter.getActName() + "')||'%'");
			}

			if (smsbuyItemRouter.getCmdOptType() != null) {
				sql.append(" AND ACT.CMD_OPT_TYPE=?");
				paramsList.add(smsbuyItemRouter.getCmdOptType());
			}
			if (smsbuyItemRouter.getActId() != null) {
				sql.append(" AND ACT.ACT_ID=?");
				paramsList.add(smsbuyItemRouter.getActId());
			}
		}
		sql.append(RoleDataUtils.getRoleData(RoleDataUtils.MODUE_SMSBUY));
		sql.append(" ORDER BY ID DESC");
		return dbHelper.getPage(sql.toString(), SmsbuyItemRouter.class, page, pagesize, paramsList.toArray());
	}

	/**
	 * 添加短信购活动配置
	 * 
	 * @param smsBuyActOnline
	 * @param session
	 */
	public void addAct(SmsBuyActOnline smsBuyActOnline) {
		smsBuyActOnline.setStatus("audit");// 待审核状态
		smsBuyActOnline.setStoreId(0L);// 后台管理系统中商户编号默认填“0”
		smsBuyActOnline.setStartTime(TimeUtil.format(smsBuyActOnline.getStartTime(), TimeUtil.TARGET_1, TimeUtil.SOURCE_1));
		smsBuyActOnline.setEndTime(TimeUtil.format(smsBuyActOnline.getEndTime(), TimeUtil.TARGET_1, TimeUtil.SOURCE_1));
		smsBuyActOnlineDao.save(smsBuyActOnline);
	}

	/**
	 * 活动预编辑
	 * 
	 * @param actId
	 * @param model
	 */
	public void preEditAct(Long actId, Model model) {

		SmsBuyActOnline smsBuyActOnline = smsBuyActOnlineDao.findOne(actId);

		/** 将数据库时间转换成页面展示格式 yyyymmddhhmiss -> yyyy-mm-dd hh:mi:ss */
		smsBuyActOnline.setStartTime(TimeUtil.format(smsBuyActOnline.getStartTime(), TimeUtil.SOURCE_1, TimeUtil.TARGET_1));
		smsBuyActOnline.setEndTime(TimeUtil.format(smsBuyActOnline.getEndTime(), TimeUtil.SOURCE_1, TimeUtil.TARGET_1));

		String actAreas = smsBuyActOnline.getActArea();

		smsBuyActOnline.setAreaName(getAreaNames(actAreas));

		model.addAttribute("smsBuyActOnline", smsBuyActOnline);
		model.addAttribute("method", "edit");
	}

	/**
	 * 商品指令预添加
	 * 
	 * @param actId
	 * @param model
	 * @throws SQLException
	 */
	public void preAddItemRouter(Long actId, Long id, Integer page, Model model) throws SQLException {

		SmsbuyItemRouter smsbuyItemRouter = new SmsbuyItemRouter();
		if (id != null) {
			SmsbuyItemRouter router = smsbuyItemRouterDao.findOne(id);
			smsbuyItemRouter.setItemId(router.getItemId());
			smsbuyItemRouter.setItemName(router.getItemName());
		}

		smsbuyItemRouter.setActId(actId);
		List<SysSpcode> sysSpcodeList = sysSpcodeDao.findByValid(0);

		Page<SmsbuyItemRouter> smsbuyItemRouterList = routerList(smsbuyItemRouter, page, Page.DEFAULT_PAGESIZE);

		model.addAttribute("pageData", smsbuyItemRouterList);
		model.addAttribute("sysSpcodeList", sysSpcodeList);
		model.addAttribute("smsbuyItemRouter", smsbuyItemRouter);
		model.addAttribute("cmdOptTypeMap", SmsbuyItemRouter.cmdOptTypeMap);
		model.addAttribute("payTypeMap", SmsbuyItemRouter.payTypeMap);
		model.addAttribute("method", "add");
		model.addAttribute("actId", actId);
	}

	/**
	 * 添加商品指令
	 * 
	 * @param smsbuyItemRouter
	 */
	public void addItemRouter(SmsbuyItemRouter smsbuyItemRouter) {
		String rootSpcode = smsbuyItemRouter.getRootSpcode();
		smsbuyItemRouter.setSpCode(rootSpcode + smsbuyItemRouter.getSpCode());
		smsbuyItemRouterDao.save(smsbuyItemRouter);
	}

	/**
	 * 商品指令预编辑
	 * 
	 * @param id
	 * @param model
	 */
	public void preEditRouter(Long id, Model model) {
		SmsbuyItemRouter smsbuyItemRouter = smsbuyItemRouterDao.findOne(id);

		String spCode = smsbuyItemRouter.getSpCode();
		if (StringUtils.isNotEmpty(spCode)) {
			smsbuyItemRouter.setSpCode(spCode.substring(8));
		}
		List<SysSpcode> sysSpcodeList = sysSpcodeDao.findByValid(0);
		model.addAttribute("sysSpcodeList", sysSpcodeList);
		model.addAttribute("smsbuyItemRouter", smsbuyItemRouter);
		model.addAttribute("cmdOptTypeMap", SmsbuyItemRouter.cmdOptTypeMap);
		model.addAttribute("payTypeMap", SmsbuyItemRouter.payTypeMap);
		model.addAttribute("method", "add");
	}

	/**
	 * 删除活动
	 * 
	 * @param actId
	 */
	public String deleteAct(Long actId) {

		String msg = "删除成功！";
		SmsBuyActOnline smsBuyActOnline = smsBuyActOnlineDao.findOne(actId);
		if ("online".equals(smsBuyActOnline.getStatus())) {
			msg = "商用状态不允许删除！";
		} else {
			List<SmsbuyItemRouter> itemRouterList = smsbuyItemRouterDao.findByActId(actId);
			if (itemRouterList.size() > 0) {
				smsbuyItemRouterDao.delete(itemRouterList);
			}
			if (smsBuyActOnline != null) {
				smsBuyActOnlineDao.delete(smsBuyActOnline);
			}
		}

		return msg;

	}

	/**
	 * 查看活动
	 * 
	 * @param actId
	 * @param model
	 * @throws SQLException
	 */
	public void viewAct(Integer page, Long actId, Model model) throws SQLException {
		SmsBuyActOnline smsBuyActOnline = smsBuyActOnlineDao.findOne(actId);

		SmsbuyItemRouter smsbuyItemRouter = new SmsbuyItemRouter();
		smsbuyItemRouter.setActId(actId);

		Page<SmsbuyItemRouter> smsbuyItemRouterList = routerList(smsbuyItemRouter, page, Page.DEFAULT_PAGESIZE);

		String actAreas = smsBuyActOnline.getActArea();
		smsBuyActOnline.setAreaName(getAreaNames(actAreas));

		model.addAttribute("pageData", smsbuyItemRouterList);
		model.addAttribute("smsBuyActOnline", smsBuyActOnline);
	}

	/**
	 * 获取地区名
	 * 
	 * @param actAreas
	 * @return
	 */
	private String getAreaNames(String actAreas) {
		String[] actAreaStrs = actAreas.split(",");
		String areaName = "";
		for (String areaIdStr : actAreaStrs) {
			List<SysRegion> listSysRegion = sysRegionDao.findByAreaCode(areaIdStr);
			if (listSysRegion.size()>0) {
				SysRegion sysRegion = listSysRegion.get(0);
				areaName += sysRegion.getRegionName() + ",";
			}
		}
		if(areaName!=""){
			return areaName.substring(0, areaName.lastIndexOf(","));
			
		}else{
			return actAreas;
		}
	}

	/**
	 * 删除商品指令
	 * 
	 * @param id
	 * @return
	 */
	public String deleteRouter(Long id) {

		SmsbuyItemRouter smsbuyItemRouter = smsbuyItemRouterDao.findOne(id);
		if (smsbuyItemRouter != null) {
			smsbuyItemRouterDao.delete(id);
		}
		return "/smsbuy/act/preAddItemRouter.do?actId=" + smsbuyItemRouter.getActId();
	}

	/**
	 * 查看商品指令
	 * 
	 * @param id
	 * @param model
	 */
	public void viewRouter(Long id, Model model) {

		SmsbuyItemRouter smsbuyItemRouter = smsbuyItemRouterDao.findOne(id);

		model.addAttribute("smsbuyItemRouter", smsbuyItemRouter);
	}

	/**
	 * 修改活动状态
	 * 
	 * @param actId
	 * @param string
	 */
	public String updateStatus(Long actId, String status) {
		List<SmsbuyItemRouter> routerList = smsbuyItemRouterDao.findByActId(actId);

		String msg = "上线成功！";
		if (routerList.size() > 0) {
			SmsBuyActOnline smsBuyActOnline = smsBuyActOnlineDao.findOne(actId);
			smsBuyActOnline.setStatus(status);
			smsBuyActOnlineDao.save(smsBuyActOnline);
		} else {
			msg = "活动下未配置指令，不允许上线！";
		}
		return msg;
	}

	public String preAdd(Long actId, Model model) {
		String url = "";
		SmsBuyActOnline smsBuyActOnline = null;
		if (actId != null) {
			url = "/smsbuy/act/act-add1";
			smsBuyActOnline = smsBuyActOnlineDao.findOne(actId);

		} else {
			url = "/smsbuy/act/act-add";
			smsBuyActOnline = new SmsBuyActOnline();
		}
		model.addAttribute("smsBuyActOnline", smsBuyActOnline);
		model.addAttribute("actId", actId);
		model.addAttribute("method", "add");
		return url;
	}
}
