package com.cplatform.mall.back.order.service;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cplatform.dbhelp.DbHelper;
import com.cplatform.mall.back.order.dao.CodeInfoDao;
import com.cplatform.mall.back.order.entity.CodeInfo;

/**
 * @Title
 * @Description
 * @Copyright: Copyright (c) 2013-8-16
 * @Company: 北京宽连十方数字技术有限公司
 * @Author chencheng
 * @Version: 1.0
 *
 */
@Service
public class CodeInfoService {
	private static Logger log=Logger.getLogger(CodeInfoService.class);
	
	@Autowired
	private DbHelper dbHelper;
	
	@Autowired
	private CodeInfoDao codeInfoDao;
	
	/**
	 * 根据码编号查询
	 * @param id
	 * @return
	 */
	public CodeInfo findCodeById(String id){
		CodeInfo codeInfo=codeInfoDao.findOne(id);
		return codeInfo;
	}
	
	/**
	 * 保存或更新码
	 * @param codeInfo
	 */
	public void save(CodeInfo codeInfo){
		codeInfoDao.save(codeInfo);
	}
	/**
	 * 查询订单中虚拟商品的验证码
	 * @param storeCode
	 * @return
	 * @throws SQLException
	 */
	public List<CodeInfo> listStoreCodes(CodeInfo codeInfo) throws SQLException{
		StringBuilder sqlBuff = new StringBuilder(100);
		List<Object> params = new ArrayList<Object>();
		sqlBuff.append(" select t.* ");
		sqlBuff.append(" from T_VERIFY_CODE_INFO t ");
		sqlBuff.append(" where 1 = 1 ");
		if(null!=codeInfo.getActOrderId()){
			sqlBuff.append(" and t.ACT_ORDER_ID=? ");
			params.add(codeInfo.getActOrderId());
		}
		if(null!=codeInfo.getItemOrderId()){
			sqlBuff.append(" and t.ITEM_ORDER_ID=? ");
			params.add(codeInfo.getItemOrderId());
		}
		return dbHelper.getBeanList(sqlBuff.toString(),CodeInfo.class, params.toArray());
	}
	
}
