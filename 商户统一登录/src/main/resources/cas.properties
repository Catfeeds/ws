##
# Services Management Web UI Security
server.name=http://localhost:8080/storeuc
server.prefix=${server.name}
cas.securityContext.serviceProperties.service=${server.prefix}/services/j_acegi_cas_security_check
# Names of roles allowed to access the CAS service manager
cas.securityContext.serviceProperties.adminRoles=ROLE_ADMIN
cas.securityContext.usersByUsernameQuery = select user_code username,user_pwd password, status enable from t_sys_user where user_code=?
cas.securityContext.authoritiesByUsernameQuery = select user_code username, flag authority from t_sys_user where user_code=?
cas.securityContext.casProcessingFilterEntryPoint.loginUrl=${server.prefix}/login
cas.securityContext.ticketValidator.casServerUrlPrefix=${server.prefix}
# IP address or CIDR subnet allowed to access the /status URI of CAS that exposes health check information
cas.securityContext.status.allowedSubnet=127.0.0.1


cas.themeResolver.defaultThemeName=cas-theme-default
cas.viewResolver.basename=default_views

##
# Unique CAS node name
# host.name is used to generate unique Service Ticket IDs and SAMLArtifacts.  This is usually set to the specific
# hostname of the machine running the CAS node, but it could be any label so long as it is unique in the cluster.
host.name=storeuc.mall.com

##
# Database flavors for Hibernate
#
# One of these is needed if you are storing Services or Tickets in an RDBMS via JPA.
#
# database.hibernate.dialect=org.hibernate.dialect.OracleDialect
# database.hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
# database.hibernate.dialect=org.hibernate.dialect.HSQLDialect

##
# CAS Logout Behavior
# WEB-INF/cas-servlet.xml
#
# Specify whether CAS should redirect to the specifyed service parameter on /logout requests
cas.logout.followServiceRedirects=true

##
# Single Sign-On Session Timeouts
# Defaults sourced from WEB-INF/spring-configuration/ticketExpirationPolices.xml
#
# \u4F7F\u7528\u8BB0\u4F4F\u6211\u529F\u80FD\u7684\u8D85\u65F6\u65F6\u95F4 - TGT\u4F1A\u5728\u7A7A\u95F2\u540E\u4E00\u5468\u5185\u8FC7\u671F
tgt.maxRememberLiveInSeconds=604800
#
# \u6700\u5927\u751F\u5B58\u65F6\u95F4 - TGT\u5728\u751F\u62108\u5C0F\u65F6\u540E\u8FC7\u671F
tgt.maxTimeToLiveInSeconds=28800
#
# \u7A7A\u95F2\u8D85\u65F6\u65F6\u95F4 - TGT\u57282\u5C0F\u65F6\u7A7A\u95F2\u540E\u8FC7\u671F
tgt.timeToKillInSeconds=7200

##
# Service Ticket Timeout
# Default sourced from WEB-INF/spring-configuration/ticketExpirationPolices.xml
#
# \u670D\u52A1\u7968\u636E\u751F\u5B58\u5468\u671F - \u9ED8\u8BA4\u572810\u79D2\u540E\u670D\u52A1\u7968\u636E\u5C06\u5931\u6548
st.timeToKillInSeconds=10

##
# Single Logout Out Callbacks
# Default sourced from WEB-INF/spring-configuration/argumentExtractorsConfiguration.xml
#
# To turn off all back channel SLO requests set slo.disabled to true
# slo.callbacks.disabled=false

##
# Service Registry Periodic Reloading Scheduler
# Default sourced from WEB-INF/spring-configuration/applicationContext.xml
#
# Force a startup delay of 2 minutes.
# service.registry.quartz.reloader.startDelay=120000
# 
# Reload services every 2 minutes
# service.registry.quartz.reloader.repeatInterval=120000

##
# Log4j
# Default sourced from WEB-INF/spring-configuration/log4jConfiguration.xml:
#
# It is often time helpful to externalize log4j.xml to a system path to preserve settings between upgrades.
# e.g. log4j.config.location=/etc/cas/log4j.xml
log4j.config.location=classpath:log4j.xml
#
# log4j refresh interval in millis
log4j.refresh.interval=60000


memcached.servers = 127.0.0.1:11211